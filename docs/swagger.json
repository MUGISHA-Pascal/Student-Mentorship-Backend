{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "GOYA API DOCUMENTATION",
    "description": "API endpoints for registering users, logging in, and accessing user information.",
    "contact": {
      "name": "API Support",
      "email": "goyoungafrica@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                  },
                  "dob": {
                    "type": "string",
                    "example": "2006-06-05"
                  },
                  "gender": {
                    "type": "string",
                    "example": "male"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "STUDENT",
                      "COACH",
                      "EMPLOYEE",
                      "ADMIN"
                    ],
                    "example": "STUDENT"
                  },
                  "career": {
                    "type": "string",
                    "example": "GOYA instructor"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User created successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "dob": {
                          "type": "string"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "career": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "dob": {
                          "type": "string"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "career": {
                          "type": "string"
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "example": "JWT_token_here"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get user information",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User retrieved successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "dob": {
                          "type": "string"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "career": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "delete": {
        "summary": "Delete a user",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/users": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Users retrieved successfully"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "dob": {
                            "type": "string"
                          },
                          "gender": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          },
                          "career": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/generate-otp": {
      "post": {
        "summary": "Generate OTP for password reset",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OTP generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OTP generated successfully"
                    },
                    "otp": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No user with that email exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No user with that email exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/verify-otp": {
      "get": {
        "summary": "Verify OTP for password reset",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "otp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "642745"
            },
            "description": "One-Time Password (OTP) for verification"
          }
        ],
        "responses": {
          "200": {
            "description": "OTP verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OTP verified successfully"
                    },
                    "data": {
                      "type": "string",
                      "example": "user@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid OTP",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid OTP"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/update-password": {
      "patch": {
        "summary": "Update user password",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "newpassword123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/profile/{id}": {
      "get": {
        "tags": [
          "coach"
        ],
        "summary": "Fetch coach profile",
        "description": "Fetch the profile of a coach, including courses, students, and activities.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coach profile fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "courses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "students": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "activities": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/statistics": {
      "get": {
        "tags": [
          "coach"
        ],
        "summary": "Fetch coach statistics and performance",
        "description": "Fetch and calculate statistics and performance metrics for a coach, including ratings, activities, and student details.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coach statistics fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "studentCount": {
                      "type": "integer"
                    },
                    "courseCount": {
                      "type": "integer"
                    },
                    "avgRating": {
                      "type": "number"
                    },
                    "completedActivities": {
                      "type": "integer"
                    },
                    "ongoingActivities": {
                      "type": "integer"
                    },
                    "upcomingActivities": {
                      "type": "integer"
                    },
                    "weeklyStats": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "week": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "ratings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "studentName": {
                            "type": "string"
                          },
                          "rating": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/activity": {
      "get": {
        "tags": [
          "coach"
        ],
        "summary": "Fetch all activities of a coach",
        "description": "Fetch all activities for a specific coach by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activities fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "status": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "coach"
        ],
        "summary": "Create a new activity for a coach",
        "description": "Create a new activity and associate it with a coach by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "UPCOMING",
                      "ONGOING",
                      "DONE"
                    ]
                  },
                  "image": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "date",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Activity created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string"
                    },
                    "image": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Activity name, date, and status are required"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/activity/{activityId}": {
      "put": {
        "tags": [
          "coach"
        ],
        "summary": "Update a coach activity",
        "description": "Update the details of a specific activity for a coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "description": "Activity ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "UPCOMING",
                      "ONGOING",
                      "DONE"
                    ]
                  },
                  "image": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "500": {
            "description": "Error updating activity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error updating activity"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "coach"
        ],
        "summary": "Delete a coach activity",
        "description": "Delete a specific activity for a coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "description": "Activity ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Activity deleted successfully"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error deleting activity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error deleting activity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/recent-activities": {
      "get": {
        "tags": [
          "coach"
        ],
        "summary": "Fetch recent activities",
        "description": "Fetch the 10 most recent activities for a coach, filtered by upcoming or ongoing status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recent activities fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/career": {
      "post": {
        "tags": [
          "coach"
        ],
        "summary": "Create a new career for a coach",
        "description": "Add a new career associated with a specific coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Career created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Career"
                }
              }
            }
          },
          "500": {
            "description": "Error creating career",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error creating career"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/careers": {
      "get": {
        "tags": [
          "coach"
        ],
        "summary": "Fetch all careers for a coach",
        "description": "Retrieve all careers associated with a specific coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Careers fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Career"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching careers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error fetching careers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/careers/{careerId}": {
      "put": {
        "tags": [
          "coach"
        ],
        "summary": "Update a career for a coach",
        "description": "Update the details of a specific career associated with a coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "careerId",
            "in": "path",
            "required": true,
            "description": "Career ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Career updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Career"
                }
              }
            }
          },
          "404": {
            "description": "Career not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Career not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error updating career",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error updating career"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "coach"
        ],
        "summary": "Delete a career for a coach",
        "description": "Delete a specific career associated with a coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "careerId",
            "in": "path",
            "required": true,
            "description": "Career ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Career deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Career deleted successfully"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach or Career not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "examples": {
                    "coachNotFound": {
                      "summary": "Coach not found",
                      "value": {
                        "message": "Coach not found"
                      }
                    },
                    "careerNotFound": {
                      "summary": "Career not found",
                      "value": {
                        "message": "Career not found"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error deleting career",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error deleting career"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/work-experience": {
      "post": {
        "tags": [
          "coach"
        ],
        "summary": "Add work experience for a coach",
        "description": "Add a new work experience entry for a specific coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "position": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "required": [
                  "position",
                  "company",
                  "startDate"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Work experience added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkExperience"
                }
              }
            }
          },
          "500": {
            "description": "Error adding work experience",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error adding work experience"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/work-experience/{experienceId": {
      "put": {
        "tags": [
          "coach"
        ],
        "summary": "Update work experience for a coach",
        "description": "Update the details of a specific work experience entry associated with a coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experienceId",
            "in": "path",
            "required": true,
            "description": "Work Experience ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "position": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Work experience updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkExperience"
                }
              }
            }
          },
          "404": {
            "description": "Work experience not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Work experience not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error updating work experience",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error updating work experience"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "coach"
        ],
        "summary": "Delete work experience",
        "description": "Delete a specific work experience for a coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experienceId",
            "in": "path",
            "required": true,
            "description": "Work Experience ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Work experience deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Work experience deleted successfully"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error deleting work experience",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error deleting work experience"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/coaches": {
      "get": {
        "tags": [
          "coach"
        ],
        "summary": "Fetch all coaches",
        "description": "Retrieve a list of all coaches with optional filtering by name or course.",
        "parameters": [
          {
            "name": "firstName",
            "in": "query",
            "description": "Filter coaches by first name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Filter coaches by last name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "course",
            "in": "query",
            "description": "Filter coaches by course name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of coaches retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Coach"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching coaches",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "error": "An error occurred while fetching coaches."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/coaches": {
      "post": {
        "tags": [
          "coach"
        ],
        "summary": "Create a new coach",
        "description": "Creates a new coach and adds their details to the database.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "bio": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string",
                    "description": "URL or base64 string of the coach's image"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Coach created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coach"
                }
              }
            }
          },
          "500": {
            "description": "Error creating coach",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error creating coach"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/coaches/{id}": {
      "put": {
        "tags": [
          "coach"
        ],
        "summary": "Update coach details",
        "description": "Update the bio or image of an existing coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bio": {
                    "type": "string",
                    "description": "Coach's biography"
                  },
                  "image": {
                    "type": "string",
                    "description": "URL or base64 string of the coach's image"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Coach updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coach"
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error updating coach",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error updating coach"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "coach"
        ],
        "summary": "Delete a coach",
        "description": "Delete an existing coach by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coach deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach deleted successfully"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error deleting coach",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error deleting coach"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/get-entity": {
      "get": {
        "tags": [
          "coach"
        ],
        "summary": "Retrieve entity information using userId from token",
        "description": "Retrieve a specific field from a table related to the userId extracted from the token.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Bearer token for authorization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table",
            "in": "query",
            "required": true,
            "description": "The table name to query (e.g., 'coach', 'student').",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field",
            "in": "query",
            "required": true,
            "description": "The specific field to retrieve from the table.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the requested field from the specified table",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                },
                "example": {
                  "id": "12345"
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to missing parameters or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Table and field parameters are required"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No data found for the given userId in the specified table",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "coach not found for this user"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error while processing the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error retrieving data"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}