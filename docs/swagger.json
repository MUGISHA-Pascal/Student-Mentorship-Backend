{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "GOYA API DOCUMENTATION",
    "description": "API endpoints for registering users, logging in, and accessing user information.",
    "contact": {
      "name": "API Support",
      "email": "goyoungafrica@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                  },
                  "dob": {
                    "type": "string",
                    "example": "2006-06-05"
                  },
                  "gender": {
                    "type": "string",
                    "example": "male"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "STUDENT",
                      "MENTOR",
                      "EMPLOYEE",
                      "ADMIN"
                    ],
                    "example": "STUDENT"
                  },
                  "career": {
                    "type": "string",
                    "example": "GOYA instructor"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User created successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "dob": {
                          "type": "string"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "career": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "dob": {
                          "type": "string"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "career": {
                          "type": "string"
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "example": "JWT_token_here"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/mentor/form": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Handle JotForm webhook requests",
        "description": "Endpoint to process webhook requests from JotForm, update the user record, and return a response.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Webhook payload from JotForm",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email address of the user submitting the form."
                }
              },
              "required": [
                "email"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the user's filledForm status.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User's filledForm status updated"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get user information",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User retrieved successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "dob": {
                          "type": "string"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "career": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "delete": {
        "summary": "Delete a user",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/users": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Users retrieved successfully"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "dob": {
                            "type": "string"
                          },
                          "gender": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          },
                          "career": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/generate-otp": {
      "post": {
        "summary": "Generate OTP for password reset",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OTP generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OTP generated successfully"
                    },
                    "otp": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No user with that email exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No user with that email exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/verify-otp": {
      "get": {
        "summary": "Verify OTP for password reset",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "otp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "642745"
            },
            "description": "One-Time Password (OTP) for verification"
          }
        ],
        "responses": {
          "200": {
            "description": "OTP verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OTP verified successfully"
                    },
                    "data": {
                      "type": "string",
                      "example": "user@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid OTP",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid OTP"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/update-password": {
      "patch": {
        "summary": "Update user password",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "newpassword123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/profile/{id}": {
      "get": {
        "tags": [
          "coach"
        ],
        "summary": "Fetch coach profile",
        "description": "Fetch the profile of a coach, including courses, students, and activities.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coach profile fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "courses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "students": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "activities": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/statistics": {
      "get": {
        "tags": [
          "coach"
        ],
        "summary": "Fetch coach statistics and performance",
        "description": "Fetch and calculate statistics and performance metrics for a coach, including ratings, activities, and student details.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coach statistics fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "studentCount": {
                      "type": "integer"
                    },
                    "courseCount": {
                      "type": "integer"
                    },
                    "avgRating": {
                      "type": "number"
                    },
                    "completedActivities": {
                      "type": "integer"
                    },
                    "ongoingActivities": {
                      "type": "integer"
                    },
                    "upcomingActivities": {
                      "type": "integer"
                    },
                    "weeklyStats": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "week": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "ratings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "studentName": {
                            "type": "string"
                          },
                          "rating": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/activity": {
      "get": {
        "tags": [
          "coach"
        ],
        "summary": "Fetch all activities of a coach",
        "description": "Fetch all activities for a specific coach by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activities fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "status": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "coach"
        ],
        "summary": "Create a new activity for a coach",
        "description": "Create a new activity and associate it with a coach by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "UPCOMING",
                      "ONGOING",
                      "DONE"
                    ]
                  },
                  "image": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "date",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Activity created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string"
                    },
                    "image": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Activity name, date, and status are required"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/activity/{activityId}": {
      "put": {
        "tags": [
          "coach"
        ],
        "summary": "Update a coach activity",
        "description": "Update the details of a specific activity for a coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "description": "Activity ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "UPCOMING",
                      "ONGOING",
                      "DONE"
                    ]
                  },
                  "image": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "500": {
            "description": "Error updating activity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error updating activity"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "coach"
        ],
        "summary": "Delete a coach activity",
        "description": "Delete a specific activity for a coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "description": "Activity ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Activity deleted successfully"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error deleting activity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error deleting activity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/recent-activities": {
      "get": {
        "tags": [
          "coach"
        ],
        "summary": "Fetch recent activities",
        "description": "Fetch the 10 most recent activities for a coach, filtered by upcoming or ongoing status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recent activities fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/career": {
      "post": {
        "tags": [
          "coach"
        ],
        "summary": "Create a new career for a coach",
        "description": "Add a new career associated with a specific coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Career created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Career"
                }
              }
            }
          },
          "500": {
            "description": "Error creating career",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error creating career"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/careers": {
      "get": {
        "tags": [
          "coach"
        ],
        "summary": "Fetch all careers for a coach",
        "description": "Retrieve all careers associated with a specific coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Careers fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Career"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching careers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error fetching careers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/careers/{careerId}": {
      "put": {
        "tags": [
          "coach"
        ],
        "summary": "Update a career for a coach",
        "description": "Update the details of a specific career associated with a coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "careerId",
            "in": "path",
            "required": true,
            "description": "Career ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Career updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Career"
                }
              }
            }
          },
          "404": {
            "description": "Career not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Career not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error updating career",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error updating career"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "coach"
        ],
        "summary": "Delete a career for a coach",
        "description": "Delete a specific career associated with a coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "careerId",
            "in": "path",
            "required": true,
            "description": "Career ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Career deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Career deleted successfully"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach or Career not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "examples": {
                    "coachNotFound": {
                      "summary": "Coach not found",
                      "value": {
                        "message": "Coach not found"
                      }
                    },
                    "careerNotFound": {
                      "summary": "Career not found",
                      "value": {
                        "message": "Career not found"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error deleting career",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error deleting career"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/work-experience": {
      "post": {
        "tags": [
          "coach"
        ],
        "summary": "Add work experience for a coach",
        "description": "Add a new work experience entry for a specific coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "position": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "required": [
                  "position",
                  "company",
                  "startDate"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Work experience added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkExperience"
                }
              }
            }
          },
          "500": {
            "description": "Error adding work experience",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error adding work experience"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/{id}/work-experience/{experienceId": {
      "put": {
        "tags": [
          "coach"
        ],
        "summary": "Update work experience for a coach",
        "description": "Update the details of a specific work experience entry associated with a coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experienceId",
            "in": "path",
            "required": true,
            "description": "Work Experience ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "position": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Work experience updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkExperience"
                }
              }
            }
          },
          "404": {
            "description": "Work experience not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Work experience not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error updating work experience",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error updating work experience"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "coach"
        ],
        "summary": "Delete work experience",
        "description": "Delete a specific work experience for a coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experienceId",
            "in": "path",
            "required": true,
            "description": "Work Experience ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Work experience deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Work experience deleted successfully"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error deleting work experience",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error deleting work experience"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/coaches": {
      "get": {
        "tags": [
          "coach"
        ],
        "summary": "Fetch all coaches",
        "description": "Retrieve a list of all coaches with optional filtering by name or course.",
        "parameters": [
          {
            "name": "firstName",
            "in": "query",
            "description": "Filter coaches by first name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Filter coaches by last name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "course",
            "in": "query",
            "description": "Filter coaches by course name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of coaches retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Coach"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching coaches",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "error": "An error occurred while fetching coaches."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/coaches": {
      "post": {
        "tags": [
          "coach"
        ],
        "summary": "Create a new coach",
        "description": "Creates a new coach and adds their details to the database.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "bio": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string",
                    "description": "URL or base64 string of the coach's image"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Coach created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coach"
                }
              }
            }
          },
          "500": {
            "description": "Error creating coach",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error creating coach"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coach/coaches/{id}": {
      "put": {
        "tags": [
          "coach"
        ],
        "summary": "Update coach details",
        "description": "Update the bio or image of an existing coach.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bio": {
                    "type": "string",
                    "description": "Coach's biography"
                  },
                  "image": {
                    "type": "string",
                    "description": "URL or base64 string of the coach's image"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Coach updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coach"
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error updating coach",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error updating coach"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "coach"
        ],
        "summary": "Delete a coach",
        "description": "Delete an existing coach by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Coach ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coach deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach deleted successfully"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Coach not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error deleting coach",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error deleting coach"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/get-entity": {
      "get": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Retrieve entity information using userId from token",
        "description": "Retrieve all data from a table related to the userId extracted from the token. Requires a valid Bearer token in the Authorization header.",
        "parameters": [
          {
            "name": "table",
            "in": "query",
            "required": true,
            "description": "The table name to query (e.g., 'coach', 'student').",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the requested data from the specified table",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                },
                "example": {
                  "id": "12345",
                  "name": "John Doe",
                  "email": "john.doe@example.com"
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to missing parameters or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Table parameter is required"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized due to missing or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "error": "Token expired"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden due to missing Authorization header",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "error": "No token provided"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No data found for the given userId in the specified table",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "coach not found for this user"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error while processing the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Error retrieving data"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/student/students-list": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Retrieve a list of students",
        "description": "Retrieve a list of students with the option to filter and sort by name and course.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "Filter students by name (first or last)."
          },
          {
            "name": "course",
            "in": "query",
            "type": "string",
            "description": "Filter students by course name."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved students list.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID of the student."
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "description": "First name of the student."
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name of the student."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of the student."
                      }
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "Current status of the student."
                  },
                  "courses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the course."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/student-profile/{id}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Fetch student profile details",
        "description": "Retrieve detailed profile information for a specific student by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the student."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved student profile.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the student."
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "type": "string",
                      "description": "First name of the student."
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name of the student."
                    },
                    "email": {
                      "type": "string",
                      "description": "Email of the student."
                    }
                  }
                },
                "courses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Course the student is enrolled in."
                      }
                    }
                  }
                },
                "coaches": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the assigned coach."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Student not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/waitlist": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Retrieve students on the waitlist",
        "description": "Fetch students who are currently on the waitlist.",
        "responses": {
          "200": {
            "description": "Successfully retrieved waitlist students.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID of the student."
                  },
                  "status": {
                    "type": "string",
                    "description": "Current status of the student."
                  },
                  "courses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the course."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/waitlist/{id}/approve": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Approve a student on the waitlist",
        "description": "Approve a student who is on the waitlist, changing their status to 'APPROVED'.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the student to approve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully approved the student.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Status message indicating successful approval."
                },
                "student": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the approved student."
                    },
                    "status": {
                      "type": "string",
                      "description": "Updated status of the student."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Student not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/waitlist/{id}/reject": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Reject a student on the waitlist",
        "description": "Reject a student from the waitlist, changing their status to 'REJECTED'.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the student to reject."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully rejected the student.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Status message indicating successful rejection."
                },
                "student": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the rejected student."
                    },
                    "status": {
                      "type": "string",
                      "description": "Updated status of the student."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Student not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/students/{id}/message": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Send a message to a student",
        "description": "Send a message to a specific student by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the student."
          },
          {
            "name": "message",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "description": "Message content to send to the student."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent the message.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Status message indicating the message was sent."
                },
                "newMessage": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the newly created message."
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the message."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Student not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/students/{id}/remove": {
      "delete": {
        "tags": [
          "Student"
        ],
        "summary": "Remove a student from the system",
        "description": "Delete a student from the system along with any associated messages.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the student to remove."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed the student.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Status message indicating successful removal."
                },
                "deletedStudent": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the removed student."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Student not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/students": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Create a new student",
        "description": "Create a new student with provided details.",
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the student."
                },
                "courses": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "List of course IDs to connect the student with."
                  }
                },
                "coaches": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "List of coach IDs to connect the student with."
                  }
                },
                "status": {
                  "type": "string",
                  "description": "Status of the student (e.g., 'WAITLIST')."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created a new student.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the created student."
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to missing or invalid data."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/student-statistics/{id}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Get statistics for a specific student",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the student",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Student statistics retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "totalCourses": 5,
                  "mentorRating": 4.2,
                  "activities": 12,
                  "medals": 3
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "Student not found"
                }
              }
            }
          },
          "500": {
            "description": "Error fetching student statistics",
            "content": {
              "application/json": {
                "example": {
                  "error": "Error fetching student statistics"
                }
              }
            }
          }
        }
      }
    },
    "/student/performance-statistics/{studentId}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Get performance statistics for a specific student",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "required": true,
            "description": "ID of the student",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Performance statistics retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "success",
                  "data": {
                    "courses": [
                      {
                        "id": "course1",
                        "name": "Mathematics",
                        "documents": [
                          "document1",
                          "document2"
                        ]
                      }
                    ],
                    "coaches": [
                      {
                        "name": "Coach A",
                        "activities": [
                          {
                            "name": "Activity A",
                            "date": "2024-12-30",
                            "status": "DONE",
                            "image": "image_url"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to retrieve performance data",
            "content": {
              "application/json": {
                "example": {
                  "status": "error",
                  "message": "Failed to retrieve performance data."
                }
              }
            }
          }
        }
      }
    },
    "/student/upcoming-events": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Retrieve all upcoming student events",
        "responses": {
          "200": {
            "description": "Upcoming events retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "success",
                  "data": [
                    {
                      "id": "event1",
                      "name": "Meeting with Coach",
                      "date": "2024-12-30",
                      "status": "UPCOMING",
                      "coach": {
                        "name": "Coach A"
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Failed to retrieve upcoming events",
            "content": {
              "application/json": {
                "example": {
                  "status": "error",
                  "message": "Failed to retrieve upcoming events."
                }
              }
            }
          }
        }
      }
    },
    "/student/recent-activities": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Get recent activities with images from the past week",
        "responses": {
          "200": {
            "description": "Recent activities retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "success",
                  "data": [
                    {
                      "id": "activity1",
                      "name": "Completed Project",
                      "date": "2024-12-20",
                      "image": "image_url",
                      "coach": {
                        "id": "coach1",
                        "name": "Coach A"
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Failed to retrieve recent activities",
            "content": {
              "application/json": {
                "example": {
                  "status": "error",
                  "message": "Failed to retrieve recent activities."
                }
              }
            }
          }
        }
      }
    },
    "/student/available-courses": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Get all available course documents",
        "responses": {
          "200": {
            "description": "Available course documents retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "success",
                  "data": [
                    {
                      "id": "document1",
                      "name": "Course Document 1",
                      "uploadDate": "2024-12-20",
                      "coach": {
                        "id": "coach1",
                        "name": "Coach A"
                      },
                      "course": {
                        "id": "course1",
                        "name": "Mathematics"
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Failed to retrieve available course documents",
            "content": {
              "application/json": {
                "example": {
                  "status": "error",
                  "message": "Failed to retrieve available course documents."
                }
              }
            }
          }
        }
      }
    },
    "/student/mentor-profile/{coachId}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Get mentor (coach) profile details",
        "parameters": [
          {
            "name": "coachId",
            "in": "path",
            "required": true,
            "description": "ID of the coach",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mentor profile retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "success",
                  "data": {
                    "name": "Coach A",
                    "image": "image_url",
                    "rating": 4.5
                  }
                }
              }
            }
          },
          "400": {
            "description": "Coach ID is required",
            "content": {
              "application/json": {
                "example": {
                  "status": "error",
                  "message": "Coach ID required"
                }
              }
            }
          },
          "404": {
            "description": "Mentor not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "error",
                  "message": "Mentor not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "status": "error",
                  "message": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/student/mentor-experience/{mentorId}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Get mentor (coach) work experience",
        "parameters": [
          {
            "name": "mentorId",
            "in": "path",
            "required": true,
            "description": "ID of the mentor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mentor work experience retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "success",
                  "data": [
                    {
                      "position": "Software Engineer",
                      "company": "Tech Inc",
                      "startDate": "2018-01-01",
                      "endDate": "2020-01-01"
                    },
                    {
                      "position": "Lead Mentor",
                      "company": "Education Org",
                      "startDate": "2020-01-01",
                      "endDate": "Present"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Mentor ID is required",
            "content": {
              "application/json": {
                "example": {
                  "status": "error",
                  "message": "Mentor ID required"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          }
        }
      }
    },
    "/student/mentor-courses/{coachId}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Retrieve the courses of a coach",
        "parameters": [
          {
            "name": "coachId",
            "in": "path",
            "required": true,
            "description": "The ID of the coach to fetch courses for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved coach's courses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "integer",
                      "description": "Number of courses the coach is offering"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Coach ID is required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Coach ID required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Coach not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Coach not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/student/mentor-rating/{coachId}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Retrieve the average rating of a coach",
        "parameters": [
          {
            "name": "coachId",
            "in": "path",
            "required": true,
            "description": "The ID of the coach to fetch ratings for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved coach's average rating",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "number",
                      "description": "The average rating of the coach"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Coach ID is required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Coach ID required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/student/mentor-review/{coachId}": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Submit a review for a coach",
        "parameters": [
          {
            "name": "coachId",
            "in": "path",
            "required": true,
            "description": "The ID of the coach to submit a review for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "studentId": {
                    "type": "string",
                    "description": "ID of the student submitting the review"
                  },
                  "rating": {
                    "type": "integer",
                    "description": "Rating given by the student (1-5)"
                  }
                },
                "required": [
                  "studentId",
                  "rating"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully submitted the review",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Review submitted successfully"
                    },
                    "data": {
                      "type": "object",
                      "description": "The created review data"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Coach ID or rating is missing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Coach ID required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/student/mentor-reviews/{coachId}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Retrieve reviews for a mentor (coach)",
        "description": "Get the reviews for a specific mentor (coach) using their coachId, with pagination options.",
        "parameters": [
          {
            "name": "coachId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the mentor (coach)."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 1,
            "description": "Page number for pagination (default: 1)."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "description": "Number of results per page (default: 10)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved mentor reviews.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "rating": {
                    "type": "number",
                    "description": "Rating given by the student."
                  },
                  "studentName": {
                    "type": "string",
                    "description": "Full name of the student who gave the review."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Coach ID required."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/mentor-cv/{mentorId}": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Retrieve the CV of a mentor (coach)",
        "description": "Download the CV of a mentor (coach) using their mentorId.",
        "parameters": [
          {
            "name": "mentorId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the mentor (coach)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the mentor CV.",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Coach ID required."
          },
          "404": {
            "description": "Coach CV not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/event-schedule": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Fetch event schedule for the student",
        "description": "Get the schedule of events for the logged-in student.",
        "responses": {
          "200": {
            "description": "Successfully retrieved event schedule.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the event."
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of the event."
                  },
                  "time": {
                    "type": "string",
                    "format": "time",
                    "description": "Time of the event."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the event (e.g., scheduled, completed)."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/clear-recent-activities": {
      "delete": {
        "tags": [
          "Student"
        ],
        "summary": "Clear recent activities for the student",
        "description": "Delete all recent activities for the logged-in student.",
        "responses": {
          "200": {
            "description": "Successfully cleared recent activities."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/daily-meetings": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Fetch daily meetings for the student",
        "description": "Retrieve all the meetings scheduled for today for the student.",
        "responses": {
          "200": {
            "description": "Successfully retrieved daily meetings.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string",
                    "description": "Subject of the meeting."
                  },
                  "time": {
                    "type": "string",
                    "format": "time",
                    "description": "Time of the meeting."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the meeting (e.g., confirmed, pending)."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/add-event": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Add an event to the student's schedule",
        "description": "Create a new event and add it to the student's calendar.",
        "parameters": [
          {
            "name": "title",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "Title of the event."
          },
          {
            "name": "date",
            "in": "body",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Date of the event."
          },
          {
            "name": "time",
            "in": "body",
            "required": true,
            "type": "string",
            "format": "time",
            "description": "Time of the event."
          },
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "ID of the user associated with the event."
          },
          {
            "name": "status",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "Status of the event (e.g., scheduled, canceled)."
          }
        ],
        "responses": {
          "200": {
            "description": "Event successfully added to the schedule.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Status message."
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the created event."
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the event."
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Date of the event."
                    },
                    "time": {
                      "type": "string",
                      "format": "time",
                      "description": "Time of the event."
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the event."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/remove-event": {
      "delete": {
        "tags": [
          "Student"
        ],
        "summary": "Remove an event from the student's schedule",
        "description": "Delete an existing event from the student's calendar using the event ID.",
        "parameters": [
          {
            "name": "eventId",
            "in": "body",
            "required": true,
            "type": "string",
            "description": "ID of the event to be removed."
          }
        ],
        "responses": {
          "200": {
            "description": "Event successfully removed from the schedule."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/student/calendar-view": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Fetch the calendar view for the student",
        "description": "Retrieve all the events in the student's calendar, ordered by date.",
        "responses": {
          "200": {
            "description": "Successfully retrieved the calendar view.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID of the event."
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the event."
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of the event."
                  },
                  "time": {
                    "type": "string",
                    "format": "time",
                    "description": "Time of the event."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the event."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/blog/create-blog": {
      "post": {
        "tags": [
          "Blog"
        ],
        "summary": "Create a new blog post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "writer": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "writer"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Blog created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/blog/get-blogs": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get all blogs",
        "parameters": [
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "dateCreated"
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "asc"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blogs fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "image": {
                            "type": "string"
                          },
                          "dateCreated": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/blog/get-blog/{id}": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get a blog by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blog fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "writer": {
                          "type": "string"
                        },
                        "image": {
                          "type": "string"
                        },
                        "dateCreated": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Blog not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/blog/search-blogs": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Search blogs by title or description",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blogs matching the keyword",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "writer": {
                            "type": "string"
                          },
                          "image": {
                            "type": "string"
                          },
                          "dateCreated": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No blogs found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}